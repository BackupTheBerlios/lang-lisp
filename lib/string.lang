;;
;;  Copyright (C) 2009-02-07 Jasper den Ouden.
;;
;;  This file is part of Lang(working title).
;;
;;  Lang is free software: you can redistribute it and/or modify
;;  it under the terms of the GNU Affero General Public License as published
;;  by the Free Software Foundation, either version 3 of the License, or
;;  (at your option) any later version.
;;
;;  Lang is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU Affero General Public License for more details.
;;
;;  You should have received a copy of the GNU Affero General Public License
;;  along with Lang.  If not, see <http://www.gnu.org/licenses/>.
;;

(struct string (len)
  (is (array1 len (char)) :derive))

(defun make-string :inline ((len (integer)))
  (let1 (made (make-struct 'string
                :is (make-array1 (+ len 1) (type (char)))))
   #string termination character at end.
    (set (aref (- (get-slot 'len made) 1) made) '\0')))

(defun make-index-sequence :inline ((len (integer))
                                    (seq-tp (eql-type (string (integer)))))
  (make-string len))
