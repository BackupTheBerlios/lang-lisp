;;
;;  Copyright (C) 2009-02-07 Jasper den Ouden.
;;
;;  This file is part of Lang(working title).
;;
;;  Lang is free software: you can redistribute it and/or modify
;;  it under the terms of the GNU Affero General Public License as published
;;  by the Free Software Foundation, either version 3 of the License, or
;;  (at your option) any later version.
;;
;;  Lang is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU Affero General Public License for more details.
;;
;;  You should have received a copy of the GNU Affero General Public License
;;  along with Lang.  If not, see <http://www.gnu.org/licenses/>.
;;

(struct array1 (len-cntr item-tp)
  (len len-cntr) (items (ptr item-tp)))

(defun aref ((index (integer))
              (array (array1 (integer) item-tp)))
  (val-of (ptr-shift (get-slot 'len array) index)))

(defun (set aref) ((set-to item-tp) (index (integer))
       	           (array (array1 (integer) item-tp)))
  (set (val-of (ptr-shift (get-slot 'len array) index)) set-to))

(defun make-array1 :inline ((length (integer)) (type (type)))
  (make-struct 'array1 :len  length
  	  :items (malloc (* (size-of type) length))))

(defun make-array1 :inline ((length (eql (integer len))) type)
  (make-struct 'array1 :len  length))

(defun make-index-sequence :inline ((len (integer))
                                    (seq-tp (array1 (integer) item)))
  (make-array1 len item))

(defun arr-ptr ((a (array1 (integer) item)))
  (get-slot 'items a))
